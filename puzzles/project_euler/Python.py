#!/usr/bin/python

def prob1():
	""" 
	Problem 1:

	If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9.
	The sum of these multiples is 23.

	Find the sum of all the multiples of 3 or 5 below 1000.

	"""
	multiples = [x for x in range(1,1000) if x % 3 == 0 or x % 5 == 0]
	return sum(multiples)

def prob2():
	"""
	Problem 2:

	Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

	1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

	By considering the terms in the Fibonacci sequence whose values do not exceed four million, find
	the sum of the even-valued terms.
	"""
	answer = 0
	a, b = 0, 1
	endpoint = 4000000

	while b < endpoint:
		a, b = b, a + b
		if b % 2 == 0:
			answer = answer + b 
	return answer

def prob3():
	"""
	Problem 3:

	The prime factors of 13195 are 5, 7, 13 and 29.

	What is the largest prime factor of the number 600851475143?
	"""
	end = 600851475143
	start = 2

	while (start**2 <= end):
		if (end % start == 0):
			end /= start
		else:
			start += 2 if start > 2 else 1

	return start

def prob4():
	"""
	A palindromic number reads the same both ways. The largest palindrome made from the product
	of two 2-digit numbers is 9009 = 91 * 99.

	Find the largest palindrome made from the product of two 3-digit numbers.
	"""
	palindromes = []

	for i in range(100, 999, 1):
		for j in range(999, 100, -1):
			if str(i*j)[::-1] == str(i*j):
				palindromes.append(i*j) 

	return max(palindromes)

if __name__ == '__main__':
	print("Problem 1: " + str(prob1()))
	print("Problem 2: " + str(prob2()))
	print("Problem 3: " + str(prob3()))
	print("Problem 4: " + str(prob4()))